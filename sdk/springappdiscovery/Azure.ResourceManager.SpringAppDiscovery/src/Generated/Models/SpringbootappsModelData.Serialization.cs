// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Text.Json;
using Azure.Core;
using Azure.ResourceManager.Models;
using Azure.ResourceManager.SpringAppDiscovery.Models;

namespace Azure.ResourceManager.SpringAppDiscovery
{
    public partial class SpringbootappsModelData : IUtf8JsonSerializable
    {
        void IUtf8JsonSerializable.Write(Utf8JsonWriter writer)
        {
            writer.WriteStartObject();
            if (Optional.IsDefined(Properties))
            {
                writer.WritePropertyName("properties"u8);
                writer.WriteObjectValue(Properties);
            }
            if (Optional.IsDefined(SiteName))
            {
                writer.WritePropertyName("siteName"u8);
#if NET6_0_OR_GREATER
				writer.WriteRawValue(SiteName);
#else
                JsonSerializer.Serialize(writer, JsonDocument.Parse(SiteName.ToString()).RootElement);
#endif
            }
            if (Optional.IsDefined(SpringbootappsName))
            {
                writer.WritePropertyName("springbootappsName"u8);
#if NET6_0_OR_GREATER
				writer.WriteRawValue(SpringbootappsName);
#else
                JsonSerializer.Serialize(writer, JsonDocument.Parse(SpringbootappsName.ToString()).RootElement);
#endif
            }
            writer.WriteEndObject();
        }

        internal static SpringbootappsModelData DeserializeSpringbootappsModelData(JsonElement element)
        {
            if (element.ValueKind == JsonValueKind.Null)
            {
                return null;
            }
            Optional<SpringbootappsProperties> properties = default;
            Optional<BinaryData> siteName = default;
            Optional<BinaryData> springbootappsName = default;
            ResourceIdentifier id = default;
            string name = default;
            ResourceType type = default;
            Optional<SystemData> systemData = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("properties"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    properties = SpringbootappsProperties.DeserializeSpringbootappsProperties(property.Value);
                    continue;
                }
                if (property.NameEquals("siteName"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    siteName = BinaryData.FromString(property.Value.GetRawText());
                    continue;
                }
                if (property.NameEquals("springbootappsName"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    springbootappsName = BinaryData.FromString(property.Value.GetRawText());
                    continue;
                }
                if (property.NameEquals("id"u8))
                {
                    id = new ResourceIdentifier(property.Value.GetString());
                    continue;
                }
                if (property.NameEquals("name"u8))
                {
                    name = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("type"u8))
                {
                    type = new ResourceType(property.Value.GetString());
                    continue;
                }
                if (property.NameEquals("systemData"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    systemData = JsonSerializer.Deserialize<SystemData>(property.Value.GetRawText());
                    continue;
                }
            }
            return new SpringbootappsModelData(id, name, type, systemData.Value, properties.Value, siteName.Value, springbootappsName.Value);
        }
    }
}
