// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Threading;
using Azure;
using Azure.Core;
using Azure.Core.Pipeline;
using Azure.ResourceManager;

namespace Azure.ResourceManager.SpringAppDiscovery
{
    /// <summary> A class to add extension methods to SubscriptionResource. </summary>
    internal partial class SubscriptionResourceExtensionClient : ArmResource
    {
        private ClientDiagnostics _springbootsitesModelspringbootsitesClientDiagnostics;
        private SpringbootsitesRestOperations _springbootsitesModelspringbootsitesRestClient;
        private ClientDiagnostics _springbootserversModelspringbootserversClientDiagnostics;
        private SpringbootserversRestOperations _springbootserversModelspringbootserversRestClient;
        private ClientDiagnostics _springbootappsModelspringbootappsClientDiagnostics;
        private SpringbootappsRestOperations _springbootappsModelspringbootappsRestClient;

        /// <summary> Initializes a new instance of the <see cref="SubscriptionResourceExtensionClient"/> class for mocking. </summary>
        protected SubscriptionResourceExtensionClient()
        {
        }

        /// <summary> Initializes a new instance of the <see cref="SubscriptionResourceExtensionClient"/> class. </summary>
        /// <param name="client"> The client parameters to use in these operations. </param>
        /// <param name="id"> The identifier of the resource that is the target of operations. </param>
        internal SubscriptionResourceExtensionClient(ArmClient client, ResourceIdentifier id) : base(client, id)
        {
        }

        private ClientDiagnostics SpringbootsitesModelspringbootsitesClientDiagnostics => _springbootsitesModelspringbootsitesClientDiagnostics ??= new ClientDiagnostics("Azure.ResourceManager.SpringAppDiscovery", SpringbootsitesModelResource.ResourceType.Namespace, Diagnostics);
        private SpringbootsitesRestOperations SpringbootsitesModelspringbootsitesRestClient => _springbootsitesModelspringbootsitesRestClient ??= new SpringbootsitesRestOperations(Pipeline, Diagnostics.ApplicationId, Endpoint, GetApiVersionOrNull(SpringbootsitesModelResource.ResourceType));
        private ClientDiagnostics SpringbootserversModelspringbootserversClientDiagnostics => _springbootserversModelspringbootserversClientDiagnostics ??= new ClientDiagnostics("Azure.ResourceManager.SpringAppDiscovery", SpringbootserversModelResource.ResourceType.Namespace, Diagnostics);
        private SpringbootserversRestOperations SpringbootserversModelspringbootserversRestClient => _springbootserversModelspringbootserversRestClient ??= new SpringbootserversRestOperations(Pipeline, Diagnostics.ApplicationId, Endpoint, GetApiVersionOrNull(SpringbootserversModelResource.ResourceType));
        private ClientDiagnostics SpringbootappsModelspringbootappsClientDiagnostics => _springbootappsModelspringbootappsClientDiagnostics ??= new ClientDiagnostics("Azure.ResourceManager.SpringAppDiscovery", SpringbootappsModelResource.ResourceType.Namespace, Diagnostics);
        private SpringbootappsRestOperations SpringbootappsModelspringbootappsRestClient => _springbootappsModelspringbootappsRestClient ??= new SpringbootappsRestOperations(Pipeline, Diagnostics.ApplicationId, Endpoint, GetApiVersionOrNull(SpringbootappsModelResource.ResourceType));

        private string GetApiVersionOrNull(ResourceType resourceType)
        {
            TryGetApiVersion(resourceType, out string apiVersion);
            return apiVersion;
        }

        /// <summary>
        /// List springbootsites resource by subscription
        /// <list type="bullet">
        /// <item>
        /// <term>Request Path</term>
        /// <description>/subscriptions/{subscriptionId}/providers/Microsoft.OffAzureSpringBoot/springbootsites</description>
        /// </item>
        /// <item>
        /// <term>Operation Id</term>
        /// <description>springbootsites_ListBySubscription</description>
        /// </item>
        /// </list>
        /// </summary>
        /// <param name="cancellationToken"> The cancellation token to use. </param>
        /// <returns> An async collection of <see cref="SpringbootsitesModelResource" /> that may take multiple service requests to iterate over. </returns>
        public virtual AsyncPageable<SpringbootsitesModelResource> GetSpringbootsitesModelsAsync(CancellationToken cancellationToken = default)
        {
            HttpMessage FirstPageRequest(int? pageSizeHint) => SpringbootsitesModelspringbootsitesRestClient.CreateListBySubscriptionRequest(Id.SubscriptionId);
            HttpMessage NextPageRequest(int? pageSizeHint, string nextLink) => SpringbootsitesModelspringbootsitesRestClient.CreateListBySubscriptionNextPageRequest(nextLink, Id.SubscriptionId);
            return PageableHelpers.CreateAsyncPageable(FirstPageRequest, NextPageRequest, e => new SpringbootsitesModelResource(Client, SpringbootsitesModelData.DeserializeSpringbootsitesModelData(e)), SpringbootsitesModelspringbootsitesClientDiagnostics, Pipeline, "SubscriptionResourceExtensionClient.GetSpringbootsitesModels", "value", "nextLink", cancellationToken);
        }

        /// <summary>
        /// List springbootsites resource by subscription
        /// <list type="bullet">
        /// <item>
        /// <term>Request Path</term>
        /// <description>/subscriptions/{subscriptionId}/providers/Microsoft.OffAzureSpringBoot/springbootsites</description>
        /// </item>
        /// <item>
        /// <term>Operation Id</term>
        /// <description>springbootsites_ListBySubscription</description>
        /// </item>
        /// </list>
        /// </summary>
        /// <param name="cancellationToken"> The cancellation token to use. </param>
        /// <returns> A collection of <see cref="SpringbootsitesModelResource" /> that may take multiple service requests to iterate over. </returns>
        public virtual Pageable<SpringbootsitesModelResource> GetSpringbootsitesModels(CancellationToken cancellationToken = default)
        {
            HttpMessage FirstPageRequest(int? pageSizeHint) => SpringbootsitesModelspringbootsitesRestClient.CreateListBySubscriptionRequest(Id.SubscriptionId);
            HttpMessage NextPageRequest(int? pageSizeHint, string nextLink) => SpringbootsitesModelspringbootsitesRestClient.CreateListBySubscriptionNextPageRequest(nextLink, Id.SubscriptionId);
            return PageableHelpers.CreatePageable(FirstPageRequest, NextPageRequest, e => new SpringbootsitesModelResource(Client, SpringbootsitesModelData.DeserializeSpringbootsitesModelData(e)), SpringbootsitesModelspringbootsitesClientDiagnostics, Pipeline, "SubscriptionResourceExtensionClient.GetSpringbootsitesModels", "value", "nextLink", cancellationToken);
        }

        /// <summary>
        /// List springbootservers resource by subscription
        /// <list type="bullet">
        /// <item>
        /// <term>Request Path</term>
        /// <description>/subscriptions/{subscriptionId}/providers/Microsoft.OffAzureSpringBoot/springbootsites/{siteName}/springbootservers</description>
        /// </item>
        /// <item>
        /// <term>Operation Id</term>
        /// <description>springbootservers_ListBySubscription</description>
        /// </item>
        /// </list>
        /// </summary>
        /// <param name="siteName"> The springbootsites name. </param>
        /// <param name="cancellationToken"> The cancellation token to use. </param>
        /// <returns> An async collection of <see cref="SpringbootserversModelResource" /> that may take multiple service requests to iterate over. </returns>
        public virtual AsyncPageable<SpringbootserversModelResource> GetSpringbootserversModelsAsync(string siteName, CancellationToken cancellationToken = default)
        {
            HttpMessage FirstPageRequest(int? pageSizeHint) => SpringbootserversModelspringbootserversRestClient.CreateListBySubscriptionRequest(Id.SubscriptionId, siteName);
            HttpMessage NextPageRequest(int? pageSizeHint, string nextLink) => SpringbootserversModelspringbootserversRestClient.CreateListBySubscriptionNextPageRequest(nextLink, Id.SubscriptionId, siteName);
            return PageableHelpers.CreateAsyncPageable(FirstPageRequest, NextPageRequest, e => new SpringbootserversModelResource(Client, SpringbootserversModelData.DeserializeSpringbootserversModelData(e)), SpringbootserversModelspringbootserversClientDiagnostics, Pipeline, "SubscriptionResourceExtensionClient.GetSpringbootserversModels", "value", "nextLink", cancellationToken);
        }

        /// <summary>
        /// List springbootservers resource by subscription
        /// <list type="bullet">
        /// <item>
        /// <term>Request Path</term>
        /// <description>/subscriptions/{subscriptionId}/providers/Microsoft.OffAzureSpringBoot/springbootsites/{siteName}/springbootservers</description>
        /// </item>
        /// <item>
        /// <term>Operation Id</term>
        /// <description>springbootservers_ListBySubscription</description>
        /// </item>
        /// </list>
        /// </summary>
        /// <param name="siteName"> The springbootsites name. </param>
        /// <param name="cancellationToken"> The cancellation token to use. </param>
        /// <returns> A collection of <see cref="SpringbootserversModelResource" /> that may take multiple service requests to iterate over. </returns>
        public virtual Pageable<SpringbootserversModelResource> GetSpringbootserversModels(string siteName, CancellationToken cancellationToken = default)
        {
            HttpMessage FirstPageRequest(int? pageSizeHint) => SpringbootserversModelspringbootserversRestClient.CreateListBySubscriptionRequest(Id.SubscriptionId, siteName);
            HttpMessage NextPageRequest(int? pageSizeHint, string nextLink) => SpringbootserversModelspringbootserversRestClient.CreateListBySubscriptionNextPageRequest(nextLink, Id.SubscriptionId, siteName);
            return PageableHelpers.CreatePageable(FirstPageRequest, NextPageRequest, e => new SpringbootserversModelResource(Client, SpringbootserversModelData.DeserializeSpringbootserversModelData(e)), SpringbootserversModelspringbootserversClientDiagnostics, Pipeline, "SubscriptionResourceExtensionClient.GetSpringbootserversModels", "value", "nextLink", cancellationToken);
        }

        /// <summary>
        /// List springbootapps resource by subscription
        /// <list type="bullet">
        /// <item>
        /// <term>Request Path</term>
        /// <description>/subscriptions/{subscriptionId}/providers/Microsoft.OffAzureSpringBoot/springbootsites/{siteName}/springbootapps</description>
        /// </item>
        /// <item>
        /// <term>Operation Id</term>
        /// <description>springbootapps_ListBySubscription</description>
        /// </item>
        /// </list>
        /// </summary>
        /// <param name="siteName"> The springbootsites name. </param>
        /// <param name="cancellationToken"> The cancellation token to use. </param>
        /// <returns> An async collection of <see cref="SpringbootappsModelResource" /> that may take multiple service requests to iterate over. </returns>
        public virtual AsyncPageable<SpringbootappsModelResource> GetSpringbootappsModelsAsync(string siteName, CancellationToken cancellationToken = default)
        {
            HttpMessage FirstPageRequest(int? pageSizeHint) => SpringbootappsModelspringbootappsRestClient.CreateListBySubscriptionRequest(Id.SubscriptionId, siteName);
            HttpMessage NextPageRequest(int? pageSizeHint, string nextLink) => SpringbootappsModelspringbootappsRestClient.CreateListBySubscriptionNextPageRequest(nextLink, Id.SubscriptionId, siteName);
            return PageableHelpers.CreateAsyncPageable(FirstPageRequest, NextPageRequest, e => new SpringbootappsModelResource(Client, SpringbootappsModelData.DeserializeSpringbootappsModelData(e)), SpringbootappsModelspringbootappsClientDiagnostics, Pipeline, "SubscriptionResourceExtensionClient.GetSpringbootappsModels", "value", "nextLink", cancellationToken);
        }

        /// <summary>
        /// List springbootapps resource by subscription
        /// <list type="bullet">
        /// <item>
        /// <term>Request Path</term>
        /// <description>/subscriptions/{subscriptionId}/providers/Microsoft.OffAzureSpringBoot/springbootsites/{siteName}/springbootapps</description>
        /// </item>
        /// <item>
        /// <term>Operation Id</term>
        /// <description>springbootapps_ListBySubscription</description>
        /// </item>
        /// </list>
        /// </summary>
        /// <param name="siteName"> The springbootsites name. </param>
        /// <param name="cancellationToken"> The cancellation token to use. </param>
        /// <returns> A collection of <see cref="SpringbootappsModelResource" /> that may take multiple service requests to iterate over. </returns>
        public virtual Pageable<SpringbootappsModelResource> GetSpringbootappsModels(string siteName, CancellationToken cancellationToken = default)
        {
            HttpMessage FirstPageRequest(int? pageSizeHint) => SpringbootappsModelspringbootappsRestClient.CreateListBySubscriptionRequest(Id.SubscriptionId, siteName);
            HttpMessage NextPageRequest(int? pageSizeHint, string nextLink) => SpringbootappsModelspringbootappsRestClient.CreateListBySubscriptionNextPageRequest(nextLink, Id.SubscriptionId, siteName);
            return PageableHelpers.CreatePageable(FirstPageRequest, NextPageRequest, e => new SpringbootappsModelResource(Client, SpringbootappsModelData.DeserializeSpringbootappsModelData(e)), SpringbootappsModelspringbootappsClientDiagnostics, Pipeline, "SubscriptionResourceExtensionClient.GetSpringbootappsModels", "value", "nextLink", cancellationToken);
        }
    }
}
